1. INICIA√á√ÉO
üîπ Objetivo: Definir o projeto e obter aprova√ß√£o para come√ßar.

1.1 Termo de Abertura do Projeto
PO (Anderson): Definir a justificativa e os objetivos do site.
SC (Allan): Garantir que todos entendam a vis√£o do projeto.
Devs (Raul & Icaro): Avaliar a viabilidade t√©cnica inicial.
‚úÖ Exemplo: "O site 'PI' ser√° desenvolvido para facilitar a gest√£o de projetos acad√™micos, permitindo o acompanhamento de membros, cronogramas e requisitos."

2. PLANEJAMENTO
üîπ Objetivo: Definir como o projeto ser√° conduzido.

2.1 Plano de Gerenciamento do Projeto
PO: Criar um backlog inicial das principais funcionalidades.
SC: Definir os sprints e roadmap do projeto.
Devs: Escolher tecnologias e arquiteturas adequadas.
‚úÖ Exemplo: "O site ser√° desenvolvido em Spring Boot (backend) e React (frontend), usando Scrum com sprints quinzenais."

2.2 Gerenciamento do Escopo
PO: Definir o que entra na vers√£o inicial (MVP).
SC: Criar um processo para evitar mudan√ßas constantes no escopo.
Devs: Validar a viabilidade do escopo definido.
‚úÖ Exemplo: "A primeira vers√£o incluir√° login, cadastro de projetos, atribui√ß√£o de orientadores e cronogramas."

2.3 Gerenciamento do Tempo
PO: Estimar tempo de desenvolvimento das principais funcionalidades.
SC: Criar um cronograma baseado em sprints.
Devs: Cumprir os prazos planejados para cada sprint.
‚úÖ Exemplo: "Sprint 1: Implementa√ß√£o do login. Sprint 2: Cadastro de projetos e membros."

2.4 Gerenciamento de Custos
PO: Definir or√ßamento para infraestrutura e ferramentas.
SC: Controlar custos com servidores e tecnologias utilizadas.
Devs: Escolher solu√ß√µes open-source quando poss√≠vel.
‚úÖ Exemplo: "Vamos usar um servidor gratuito no Heroku para a fase inicial."

2.5 Gerenciamento da Qualidade
PO: Definir crit√©rios de aceita√ß√£o para cada funcionalidade.
SC: Criar padr√µes para revis√£o de c√≥digo e testes.
Devs: Implementar testes unit√°rios e revisar c√≥digo antes de merge.
‚úÖ Exemplo: "Cada funcionalidade deve ser testada antes do deploy."

2.6 Gerenciamento dos Recursos Humanos
PO: Assegurar que a equipe tenha as compet√™ncias necess√°rias.
SC: Definir pap√©is e responsabilidades.
Devs: Trabalhar de forma colaborativa seguindo Scrum.
‚úÖ Exemplo: "Allan ser√° respons√°vel pela organiza√ß√£o dos sprints e remo√ß√£o de impedimentos."

2.7 Gerenciamento das Comunica√ß√µes
PO: Garantir que requisitos estejam bem documentados.
SC: Criar reuni√µes di√°rias e retrospectivas.
Devs: Comunicar problemas t√©cnicos com anteced√™ncia.
‚úÖ Exemplo: "As dailies acontecer√£o todas as manh√£s no Discord."

2.8 Gerenciamento de Riscos
PO: Identificar riscos e criar planos de mitiga√ß√£o.
SC: Monitorar riscos ao longo do projeto.
Devs: Sinalizar riscos t√©cnicos assim que forem identificados.
‚úÖ Exemplo: "Se o banco de dados cair, teremos um backup autom√°tico."

2.9 Gerenciamento das Aquisi√ß√µes
PO: Avaliar a necessidade de contratar servi√ßos externos.
SC: Controlar o uso de ferramentas pagas.
Devs: Definir bibliotecas e frameworks necess√°rios.
‚úÖ Exemplo: "Se precisarmos de um servi√ßo de nuvem pago, usaremos AWS Free Tier."

3. EXECU√á√ÉO
üîπ Objetivo: Construir o projeto conforme planejado.

3.1 Direcionamento e Gerenciamento do Trabalho
PO: Garantir que os requisitos estejam claros.
SC: Organizar e facilitar o trabalho da equipe.
Devs: Implementar as funcionalidades planejadas para cada sprint.
‚úÖ Exemplo: "Na Sprint 1, a equipe implementar√° o sistema de login e autentica√ß√£o."

3.2 Garantia da Qualidade
PO: Validar se o site atende √†s expectativas.
SC: Implementar revis√µes peri√≥dicas de qualidade.
Devs: Testar cada funcionalidade antes da entrega.
‚úÖ Exemplo: "Todos os commits devem passar por revis√£o de c√≥digo no GitHub."

3.3 Desenvolvimento do Time
PO: Incentivar aprendizado e melhoria cont√≠nua.
SC: Criar um ambiente colaborativo.
Devs: Compartilhar conhecimento entre os membros.
‚úÖ Exemplo: "Realizaremos sess√µes quinzenais para discutir boas pr√°ticas."

3.4 Gerenciamento da Comunica√ß√£o
PO: Manter o backlog atualizado.
SC: Conduzir reuni√µes regulares.
Devs: Relatar progresso e dificuldades nas dailies.
4. MONITORAMENTO E CONTROLE
üîπ Objetivo: Acompanhar o progresso e corrigir desvios.

4.1 Monitoramento do Trabalho do Projeto
PO: Validar se o projeto est√° alinhado com os objetivos.
SC: Monitorar indicadores de desempenho.
Devs: Relatar problemas no desenvolvimento.
‚úÖ Exemplo: "Se um sprint atrasar, ajustaremos o backlog para priorizar funcionalidades essenciais."

4.2 Controle Integrado de Mudan√ßas
PO: Avaliar solicita√ß√µes de mudan√ßa.
SC: Garantir que mudan√ßas n√£o comprometam prazos.
Devs: Documentar e comunicar mudan√ßas no c√≥digo.
‚úÖ Exemplo: "Se decidirmos mudar de PostgreSQL para MySQL, precisamos analisar impactos antes da mudan√ßa."

4.3 Controle da Qualidade
PO: Testar funcionalidades conforme requisitos.
SC: Validar crit√©rios de aceita√ß√£o antes da entrega.
Devs: Corrigir bugs antes do deploy.
‚úÖ Exemplo: "Antes do lan√ßamento, faremos testes de usabilidade com usu√°rios reais."

5. ENCERRAMENTO
üîπ Objetivo: Finalizar e documentar o projeto.

5.1 Encerramento do Projeto
PO: Validar se os objetivos foram atingidos.
SC: Criar um relat√≥rio final do projeto.
Devs: Documentar o c√≥digo e preparar a entrega.
‚úÖ Exemplo: "Publicaremos a vers√£o final do site e documentaremos as li√ß√µes aprendidas para futuros¬†projetos."
